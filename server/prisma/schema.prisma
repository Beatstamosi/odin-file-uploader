// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id @default(uuid())
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id        String @id @default(uuid())
  email     String @unique
  firstname String
  lastname  String
  password  String

  // Relations
  folders Folder[]
  files   File[]
}

model Folder {
  id   String @id @default(uuid())
  name String

  // Self-referencing parent-child folder relation
  parentFolder   Folder? @relation("FolderToFolder", fields: [parentFolderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  parentFolderId String?

  children Folder[] @relation("FolderToFolder")

  // Owner
  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId String

  // Files inside this folder
  files File[]
}

model File {
  id       String   @id @default(uuid())
  name     String
  size     Int // Size in bytes
  uploaded DateTime @default(now())
  url      String

  // Relations
  folder   Folder @relation(fields: [folderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  folderId String

  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId String
}
